package com.ryanchapin.util;

import java.util.ArrayList;
import java.util.List;

import com.ryanchapin.util.HashGenerator.HashAlgorithm;
import com.ryanchapin.util.HashGeneratorTest.HashTestData;

public class TestDataDoubleScalar { 

   public static List<HashTestData<? extends Object>> list =
      new ArrayList<HashTestData<? extends Object>>();

   static {

      HashTestData<? extends Object> htdDoubleScalar90 = new HashTestData<Double>(
         new Double
         "fa5ad9a8557e5a84cf23e52d3d3adf77",
         HashAlgorithm.MD5SUM);
      list.add(htdDoubleScalar90);

      HashTestData<? extends Object> htdDoubleScalar91 = new HashTestData<Double>(
         new Double
         "cb473678976f425d6ec1339838f11011007ad27d",
         HashAlgorithm.SHA1SUM);
      list.add(htdDoubleScalar91);

      HashTestData<? extends Object> htdDoubleScalar92 = new HashTestData<Double>(
         new Double(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004940656458412465441765687928682213723650598026143247644255856825006755072702087518652998363616359923797965646954457177309266567103559397963987747960107818781263007131903114045278458171678489821036887186360569987307230500063874091535649843873124733972731696151400317153853980741262385655911710266585566867681870395603106249319452715914924553293054565444011274801297099995419319894090804165633245247571478690147267801593552386115501348035264934720193790268107107491703332226844753335720832431936092382893458368060106011506169809753078342277318329247904982524730776375927247874656084778203734469699533647017972677717585125660551199131504891101451037862738167250955837389733598993664809941164205702637090279242767544565229087538682506419718265533447265625D),
         "cd2662154e6d76b2b2b92e70c0cac3ccf534f9b74eb5b89819ec509083d00a50",
         HashAlgorithm.SHA256SUM);
      list.add(htdDoubleScalar92);

      HashTestData<? extends Object> htdDoubleScalar93 = new HashTestData<Double>(
         new Double(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004940656458412465441765687928682213723650598026143247644255856825006755072702087518652998363616359923797965646954457177309266567103559397963987747960107818781263007131903114045278458171678489821036887186360569987307230500063874091535649843873124733972731696151400317153853980741262385655911710266585566867681870395603106249319452715914924553293054565444011274801297099995419319894090804165633245247571478690147267801593552386115501348035264934720193790268107107491703332226844753335720832431936092382893458368060106011506169809753078342277318329247904982524730776375927247874656084778203734469699533647017972677717585125660551199131504891101451037862738167250955837389733598993664809941164205702637090279242767544565229087538682506419718265533447265625D),
         "30f61d4b94e1d74e6a751248ff2007f715a16cd214365fcef3e5751664a568475eccd842d1396aa5cfa83f5b9d20c586",
         HashAlgorithm.SHA384SUM);
      list.add(htdDoubleScalar93);

      HashTestData<? extends Object> htdDoubleScalar94 = new HashTestData<Double>(
         new Double
         "df9c478c05321087b50a1d239b4aab290e9b793252758e706e24312aed21c29072285e436a20c3c6227f99b73638f0414fba5835586fee4e19231c1ec56d58ee",
         HashAlgorithm.SHA512SUM);
      list.add(htdDoubleScalar94);

      HashTestData<? extends Object> htdDoubleScalar95 = new HashTestData<Double>(
         new Double(-9082741083.082347869873046875D),
         "dc7faa0a5bf8b674a3c4e1b5310dc1ba",
         HashAlgorithm.MD5SUM);
      list.add(htdDoubleScalar95);

      HashTestData<? extends Object> htdDoubleScalar96 = new HashTestData<Double>(
         new Double(-9082741083.082347869873046875D),
         "c1dd4e92a9d3d7fa37e63eeefca6e860be95b267",
         HashAlgorithm.SHA1SUM);
      list.add(htdDoubleScalar96);

      HashTestData<? extends Object> htdDoubleScalar97 = new HashTestData<Double>(
         new Double(-9082741083.082347869873046875D),
         "3df1fd4a93261d17725ac8de0bb2ebd696aff3128f5d2dd50056c668dd85602f",
         HashAlgorithm.SHA256SUM);
      list.add(htdDoubleScalar97);

      HashTestData<? extends Object> htdDoubleScalar98 = new HashTestData<Double>(
         new Double(-9082741083.082347869873046875D),
         "53f499c6caeb86e4eee58502739f2211f548b2489f239254eccb3620f62f9df42bd75d08b948dbe3a5ca58e26d74bd8b",
         HashAlgorithm.SHA384SUM);
      list.add(htdDoubleScalar98);

      HashTestData<? extends Object> htdDoubleScalar99 = new HashTestData<Double>(
         new Double(-9082741083.082347869873046875D),
         "cde564e5ac0d45ff2cd18b9e3cd4966055147ac515eac88f291cdfc8bcf306d0f6c2ae96986538ed2b1fc63febd82f2911504908cb291c0c8492866bda36ee94",
         HashAlgorithm.SHA512SUM);
      list.add(htdDoubleScalar99);

      HashTestData<? extends Object> htdDoubleScalar100 = new HashTestData<Double>(
         new Double(0D),
         "7dea362b3fac8e00956a4952a3d4f474",
         HashAlgorithm.MD5SUM);
      list.add(htdDoubleScalar100);

      HashTestData<? extends Object> htdDoubleScalar101 = new HashTestData<Double>(
         new Double(0D),
         "05fe405753166f125559e7c9ac558654f107c7e9",
         HashAlgorithm.SHA1SUM);
      list.add(htdDoubleScalar101);

      HashTestData<? extends Object> htdDoubleScalar102 = new HashTestData<Double>(
         new Double(0D),
         "af5570f5a1810b7af78caf4bc70a660f0df51e42baf91d4de5b2328de0e83dfc",
         HashAlgorithm.SHA256SUM);
      list.add(htdDoubleScalar102);

      HashTestData<? extends Object> htdDoubleScalar103 = new HashTestData<Double>(
         new Double(0D),
         "7c2db09d310ece0b36d50c86e4c3e6641684948cd6fc03262b0d0ed91a6cfbc3cd5affd396c1f85fd0a109b103364b19",
         HashAlgorithm.SHA384SUM);
      list.add(htdDoubleScalar103);

      HashTestData<? extends Object> htdDoubleScalar104 = new HashTestData<Double>(
         new Double(0D),
         "1b7409ccf0d5a34d3a77eaabfa9fe27427655be9297127ee9522aa1bf4046d4f945983678169cb1a7348edcac47ef0d9e2c924130e5bcc5f0d94937852c42f1b",
         HashAlgorithm.SHA512SUM);
      list.add(htdDoubleScalar104);

      HashTestData<? extends Object> htdDoubleScalar105 = new HashTestData<Double>(
         new Double(2340823.987567239440977573394775390625D),
         "8ab253d62f66616e56db1aaab36dfa20",
         HashAlgorithm.MD5SUM);
      list.add(htdDoubleScalar105);

      HashTestData<? extends Object> htdDoubleScalar106 = new HashTestData<Double>(
         new Double(2340823.987567239440977573394775390625D),
         "60946c8abe83f1c8b821ae4778d5f20d0f74af47",
         HashAlgorithm.SHA1SUM);
      list.add(htdDoubleScalar106);

      HashTestData<? extends Object> htdDoubleScalar107 = new HashTestData<Double>(
         new Double(2340823.987567239440977573394775390625D),
         "483796405e84729b3d69c31d1f26169fcac8f879a208fe8632dc6b07bde6dec2",
         HashAlgorithm.SHA256SUM);
      list.add(htdDoubleScalar107);

      HashTestData<? extends Object> htdDoubleScalar108 = new HashTestData<Double>(
         new Double(2340823.987567239440977573394775390625D),
         "643cb86c20dc8188440310107bd5aa00e068d95a8ad57000511e557d8eccd0ca683ea56ee367a6b5623b9750dd929040",
         HashAlgorithm.SHA384SUM);
      list.add(htdDoubleScalar108);

      HashTestData<? extends Object> htdDoubleScalar109 = new HashTestData<Double>(
         new Double(2340823.987567239440977573394775390625D),
         "96a8470592598bccc51b87b667cf83809ab02a985484dfffa9f323220890fcb666aa8788f97e4eb3a7121482e77c97a4d6d2b231bc3505dc5111af2970321711",
         HashAlgorithm.SHA512SUM);
      list.add(htdDoubleScalar109);

      HashTestData<? extends Object> htdDoubleScalar110 = new HashTestData<Double>(
         new Double(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368D),
         "5801bdc2d76b6ea9b7091a5026caf731",
         HashAlgorithm.MD5SUM);
      list.add(htdDoubleScalar110);

      HashTestData<? extends Object> htdDoubleScalar111 = new HashTestData<Double>(
         new Double(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368D),
         "de1e67a299928343dd050a52fde96feb3f1f3028",
         HashAlgorithm.SHA1SUM);
      list.add(htdDoubleScalar111);

      HashTestData<? extends Object> htdDoubleScalar112 = new HashTestData<Double>(
         new Double(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368D),
         "88dc7b5696598bb5bb3b0a3100300db6fa58d87cac4cee380462588cf04b9015",
         HashAlgorithm.SHA256SUM);
      list.add(htdDoubleScalar112);

      HashTestData<? extends Object> htdDoubleScalar113 = new HashTestData<Double>(
         new Double(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368D),
         "0e085d3e63f1e57034cbf71da947eecba416699d4e9f706fcddf85b310523a95049053aa684c927c82fb684fdf932b86",
         HashAlgorithm.SHA384SUM);
      list.add(htdDoubleScalar113);

      HashTestData<? extends Object> htdDoubleScalar114 = new HashTestData<Double>(
         new Double(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368D),
         "526471b4812bebe071cd31917871e6ab85f14614e70ddd8f0b3fba5b20c494bfad238df229b83fb9610e44cc316c3e7d9f681c9ec5d89e11096b329772dab8de",
         HashAlgorithm.SHA512SUM);
      list.add(htdDoubleScalar114);
   }
}
